let percentage = 0;

let interval = setInterval(() => {
    percentage += 1;
    document.getElementById("loading-text").innerText = `${percentage}%`;

    if (percentage === 100) {
        clearInterval(interval);
        document.getElementById("preloader").style.display = 'none'; // –ü—Ä—è—á–µ–º –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑—á–∏–∫
        document.getElementById("content").style.display = 'flex';  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
    }
}, 50);



// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∫–∞–∂–¥—ã–µ 50 –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥
  
    
    
    document.addEventListener('DOMContentLoaded', () => {const music = document.getElementById('bg-music');
    const musicIcon = document.getElementById('music-icon');  // –ò–∫–æ–Ω–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –º—É–∑—ã–∫–∏
    document.getElementById('toggle-music').addEventListener('click', () => {
        if (music.paused) {
            music.play();
            musicIcon.src = 'audio_on.png'; // –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞ "–≤–∫–ª—é—á—ë–Ω–Ω–∞—è –º—É–∑—ã–∫–∞"
        } else {
            music.pause();
            musicIcon.src = 'audio_out.png'; // –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞ "–≤—ã–∫–ª—é—á—ë–Ω–Ω–∞—è –º—É–∑—ã–∫–∞"
        }
    });
    
        const uploadBtn = document.getElementById('upload-btn');
        const workArea = document.getElementById('work-area');
        const fileList = document.getElementById('fileList');
        const fileContent = document.getElementById('fileContent');
        const processedContent = document.getElementById('processedContent');
        const addFileButton = document.getElementById('addFileButton');
        const downloadButton = document.getElementById('downloadButton');
    
        let files = [];
    
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
        uploadBtn.addEventListener('click', () => {
            const input = document.createElement('input');
            input.type = 'file';
            input.multiple = true;
            input.click();
    
            input.addEventListener('change', (e) => {
                const selectedFiles = e.target.files;
                Array.from(selectedFiles).forEach((file) => {
                    const reader = new FileReader();
                    reader.onload = (event) => {
                        files.push({ name: file.name, content: event.target.result });
                        renderFileList();
                    };
                    reader.readAsText(file);
                });
    
                workArea.style.display = 'flex';
                setTimeout(() => {
                    workArea.style.opacity = '1';
                }, 0);
            });
        });
    





        // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤
        function renderFileList() {
            fileList.innerHTML = '';
            files.forEach((file, index) => {
                const listItem = document.createElement('li');
                listItem.innerHTML = `<span class="icon">üìÑ</span>${file.name}`;
                listItem.addEventListener('click', () => displayFileContent(index));
                fileList.appendChild(listItem);
            });
        }
    
        // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        function displayFileContent(index) {
            fileContent.value = files[index].content;
            processedContent.value = `–û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–ª—è ${files[index].name}`;
        }
    
        // –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        downloadButton.addEventListener('click', () => {
            const blob = new Blob([processedContent.value], { type: 'text/plain' });
            const link = document.createElement('a');
            link.href = URL.createObjectURL(blob);
            link.download = 'processed_file.txt';
            link.click();
        });
    
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –≤—Ä—É—á–Ω—É—é
        addFileButton.addEventListener('click', () => {
            const fileName = prompt('–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞:');
            if (fileName) {
                files.push({ name: fileName, content: `–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ ${fileName}` });
                renderFileList();
            }
        });
    });
    